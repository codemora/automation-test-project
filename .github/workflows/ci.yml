name: Cucumber Selenium Tests with Allure Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chrome, firefox]
      fail-fast: false

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Set up Chrome
      - name: Setup Chrome
        if: matrix.browser == 'chrome'
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      # Set up Firefox
      - name: Setup Firefox
        if: matrix.browser == 'firefox'
        run: |
          sudo apt-get install -y firefox

      # Run tests
      - name: Run Cucumber Tests
        run: mvn test -Dbrowser=${{ matrix.browser }}

      # Store test results
      - name: Store Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: allure-results-${{ matrix.browser }}
          path: target/allure-results

  report:
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Download all test results
      - name: Download Test Results
        uses: actions/download-artifact@v3
        with:
          path: allure-results

      # Move results to target directory
      - name: Prepare Allure Results
        run: |
          mkdir -p target/allure-results
          cp -r allure-results/*/*/allure-results/* target/allure-results/

      # Generate Allure Report
      - name: Generate Allure Report
        run: mvn allure:report

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/site/allure-maven-plugin
          keep_files: false
          destination_dir: .